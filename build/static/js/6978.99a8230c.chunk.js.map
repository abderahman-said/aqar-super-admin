{"version":3,"file":"static/js/6978.99a8230c.chunk.js","mappings":"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","sources":["pages/Newsletter.js","webpack://aqar-super-admin/./src/styles/Tabel.module.css?6f51"],"sourcesContent":["import { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport styles from \"../styles/Tabel.module.css\";\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport {\r\n  Createnewsletter,\r\n  deleteNewsletter,\r\n  getNewsletter,\r\n} from \"../store/ContactSlice\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport { useFormik } from \"formik\";\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { classNames } from \"primereact/utils\";\r\n\r\nconst Newsletter = () => {\r\n  const dispatch = useDispatch();\r\n  const toast = useRef(null);\r\n  const { NewsletterData } = useSelector((state) => state.ContactSlice);\r\n  const [first, setFirst] = useState(0);\r\n  const [rows, setRows] = useState(10);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNewsletter());\r\n  }, [dispatch]);\r\n\r\n  const onPageChange = (e) => {\r\n    setFirst(e.first);\r\n    setRows(e.rows);\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    async (id) => {\r\n      try {\r\n        await dispatch(deleteNewsletter(id)).unwrap();\r\n        toast.current.show({\r\n          severity: \"success\",\r\n          summary: \"Deleted\",\r\n          detail: \"Contact deleted successfully\",\r\n        });\r\n        dispatch(getNewsletter());\r\n      } catch (error) {\r\n        toast.current.show({\r\n          severity: \"error\",\r\n          summary: \"Error\",\r\n          detail: error.message,\r\n        });\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleSendEmail = useCallback((email) => {\r\n    setEmail(email);\r\n    setVisible(true);\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      subject: \"\",\r\n    },\r\n    validate: (data) => {\r\n      const errors = {};\r\n      if (!data.subject) errors.subject = \"Subject is required.\";\r\n      return errors;\r\n    },\r\n    onSubmit: async (data, { resetForm }) => {\r\n      const payload = {\r\n        subject: data.subject,\r\n        body: email,\r\n      };\r\n      try {\r\n        await dispatch(Createnewsletter(payload)).unwrap();\r\n        toast.current.show({\r\n          severity: \"success\",\r\n          summary: \"Success\",\r\n          detail: \"Newsletter sent successfully\",\r\n        });\r\n        resetForm();\r\n        setVisible(false);\r\n      } catch (error) {\r\n        toast.current.show({\r\n          severity: \"error\",\r\n          summary: \"Error\",\r\n          detail: error.message,\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  const isFormFieldInvalid = (name) =>\r\n    !!(formik.touched[name] && formik.errors[name]);\r\n  const getFormErrorMessage = (name) =>\r\n    isFormFieldInvalid(name) ? (\r\n      <small className=\"p-error\">{formik.errors[name]}</small>\r\n    ) : (\r\n      <small className=\"p-error\">&nbsp;</small>\r\n    );\r\n\r\n  const StateBody = useCallback(\r\n    (rowData) => (\r\n      <div className=\"StatusBtn\">\r\n        <button\r\n          className=\"edite_btn\"\r\n          onClick={() => handleSendEmail(rowData.email)}\r\n        >\r\n          <FiSend />\r\n        </button>\r\n        <button className=\"del_btn\" onClick={() => handleDelete(rowData.id)}>\r\n          <RiDeleteBin6Line />\r\n        </button>\r\n      </div>\r\n    ),\r\n    [handleDelete, handleSendEmail]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Toast ref={toast} />\r\n      <div className=\"title_page\">\r\n        <h3>Newsletter</h3>\r\n      </div>\r\n      <div className=\"Table_container\">\r\n        <div className={styles.Table} id=\"tableFirstItemStart\">\r\n          <DataTable\r\n            value={NewsletterData || []}\r\n            dataKey=\"id\"\r\n            first={first}\r\n            paginator\r\n            rows={rows}\r\n            rowsPerPageOptions={[5, 10, 20, 50]}\r\n            onPage={onPageChange}\r\n            className={styles.dataTable}\r\n            responsiveLayout=\"scroll\"\r\n            stripedRows\r\n            emptyMessage=\"No data\"\r\n            totalRecords={NewsletterData?.length || 0}\r\n          >\r\n            <Column field=\"email\" header=\"Email\" />\r\n            <Column\r\n              header=\"Action\"\r\n              body={StateBody}\r\n              style={{ maxWidth: \"10rem\" }}\r\n            />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        visible={visible}\r\n        style={{ width: \"50vw\" }}\r\n        onHide={() => setVisible(false)}\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <div className=\"grid\">\r\n            <div className=\"col-12\">\r\n              <div className={styles.inputFormik2}>\r\n                <div className={styles.Signup_container}>\r\n                  <label htmlFor=\"subject\">Subject</label>\r\n                  <InputText\r\n                    id=\"subject\"\r\n                    name=\"subject\"\r\n                    className={classNames({\r\n                      \"p-invalid\": isFormFieldInvalid(\"subject\"),\r\n                    })}\r\n                    value={formik.values.subject}\r\n                    onChange={(e) =>\r\n                      formik.setFieldValue(\"subject\", e.target.value)\r\n                    }\r\n                  />\r\n                </div>\r\n                {getFormErrorMessage(\"subject\")}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-actions\">\r\n            <button type=\"submit\" className=\"add_btn mx-auto\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Newsletter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"edit_img\":\"Tabel_edit_img__mG3SK\",\"head_edit_img\":\"Tabel_head_edit_img__Ap78D\",\"imageColumn\":\"Tabel_imageColumn__fDVil\",\"Tabel\":\"Tabel_Tabel__zsnKH\",\"dataTabel\":\"Tabel_dataTabel__iWPvG\",\"TB_Content\":\"Tabel_TB_Content__ar6JL\",\"TabelButtonChar\":\"Tabel_TabelButtonChar__r-TJf\",\"TabelButton\":\"Tabel_TabelButton__f+SKu\",\"approve\":\"Tabel_approve__MHhAs\",\"Cancel\":\"Tabel_Cancel__dibA7\",\"Edite\":\"Tabel_Edite__apal0\",\"addBTN\":\"Tabel_addBTN__-FNUY\",\"Dialog_Div\":\"Tabel_Dialog_Div__Q6a9h\",\"change_store_image\":\"Tabel_change_store_image__K1TN8\",\"InputSec\":\"Tabel_InputSec__D7VSx\",\"numberInput\":\"Tabel_numberInput__xEeqB\",\"header\":\"Tabel_header__KjHHr\",\"tabel_header\":\"Tabel_tabel_header__anU1r\",\"MapLocation\":\"Tabel_MapLocation__PVtgp\",\"loc\":\"Tabel_loc__lxo-f\",\"map_p\":\"Tabel_map_p__Lc4IR\",\"Signup_container\":\"Tabel_Signup_container__Z+mdA\",\"Dialog_Signup_container\":\"Tabel_Dialog_Signup_container__+Vomx\",\"Signup_form_container\":\"Tabel_Signup_form_container__+u3fP\"};"],"names":["Newsletter","dispatch","useDispatch","toast","useRef","NewsletterData","useSelector","state","ContactSlice","first","setFirst","useState","rows","setRows","email","setEmail","visible","setVisible","useEffect","getNewsletter","handleDelete","useCallback","async","deleteNewsletter","id","unwrap","current","show","severity","summary","detail","error","message","handleSendEmail","formik","useFormik","enableReinitialize","initialValues","subject","validate","data","errors","onSubmit","_ref","resetForm","payload","body","Createnewsletter","isFormFieldInvalid","name","touched","StateBody","rowData","_jsxs","className","children","_jsx","onClick","FiSend","RiDeleteBin6Line","Toast","ref","styles","DataTable","value","dataKey","paginator","rowsPerPageOptions","onPage","e","responsiveLayout","stripedRows","emptyMessage","totalRecords","length","Column","field","header","style","maxWidth","Dialog","width","onHide","handleSubmit","htmlFor","InputText","classNames","values","onChange","setFieldValue","target","type"],"sourceRoot":""}